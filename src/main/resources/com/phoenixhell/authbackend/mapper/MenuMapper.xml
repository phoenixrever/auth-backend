<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.phoenixhell.authbackend.mapper.MenuMapper">
  <resultMap id="BaseResultMap" type="com.phoenixhell.authbackend.entity.MenuEntity">
    <id column="menu_id" jdbcType="BIGINT" property="menuId" />
    <result column="pid" jdbcType="BIGINT" property="pid" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="component" jdbcType="VARCHAR" property="component" />
    <result column="menu_sort" jdbcType="INTEGER" property="menuSort" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="redirect" jdbcType="VARCHAR" property="redirect" />
    <result column="i_frame" jdbcType="BIT" property="iFrame" />
    <result column="cache" jdbcType="BIT" property="cache" />
    <result column="hidden" jdbcType="BIT" property="hidden" />
    <result column="permission" jdbcType="VARCHAR" property="permission" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    menu_id, pid, title, name, component, menu_sort, icon, path, redirect, i_frame, cache, 
    hidden, permission, created_by, updated_by, created_time, updated_time
  </sql>
  <select id="selectByExample" parameterType="com.phoenixhell.authbackend.entity.MenuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_menu
    where menu_id = #{menuId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_menu
    where menu_id = #{menuId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.phoenixhell.authbackend.entity.MenuExample">
    delete from sys_menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.phoenixhell.authbackend.entity.MenuEntity">
    insert into sys_menu (menu_id, pid, title, 
      name, component, menu_sort, 
      icon, path, redirect, 
      i_frame, cache, hidden, permission, 
      created_by, updated_by, created_time, 
      updated_time)
    values (#{menuId,jdbcType=BIGINT}, #{pid,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{component,jdbcType=VARCHAR}, #{menuSort,jdbcType=INTEGER}, 
      #{icon,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, #{redirect,jdbcType=VARCHAR}, 
      #{iFrame,jdbcType=BIT}, #{cache,jdbcType=BIT}, #{hidden,jdbcType=BIT}, #{permission,jdbcType=VARCHAR}, 
      #{createdBy,jdbcType=VARCHAR}, #{updatedBy,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{updatedTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.phoenixhell.authbackend.entity.MenuEntity">
    insert into sys_menu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="menuId != null">
        menu_id,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="component != null">
        component,
      </if>
      <if test="menuSort != null">
        menu_sort,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="path != null">
        path,
      </if>
      <if test="redirect != null">
        redirect,
      </if>
      <if test="iFrame != null">
        i_frame,
      </if>
      <if test="cache != null">
        cache,
      </if>
      <if test="hidden != null">
        hidden,
      </if>
      <if test="permission != null">
        permission,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="menuId != null">
        #{menuId,jdbcType=BIGINT},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="component != null">
        #{component,jdbcType=VARCHAR},
      </if>
      <if test="menuSort != null">
        #{menuSort,jdbcType=INTEGER},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="redirect != null">
        #{redirect,jdbcType=VARCHAR},
      </if>
      <if test="iFrame != null">
        #{iFrame,jdbcType=BIT},
      </if>
      <if test="cache != null">
        #{cache,jdbcType=BIT},
      </if>
      <if test="hidden != null">
        #{hidden,jdbcType=BIT},
      </if>
      <if test="permission != null">
        #{permission,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.phoenixhell.authbackend.entity.MenuExample" resultType="java.lang.Long">
    select count(*) from sys_menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_menu
    <set>
      <if test="record.menuId != null">
        menu_id = #{record.menuId,jdbcType=BIGINT},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=BIGINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.component != null">
        component = #{record.component,jdbcType=VARCHAR},
      </if>
      <if test="record.menuSort != null">
        menu_sort = #{record.menuSort,jdbcType=INTEGER},
      </if>
      <if test="record.icon != null">
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="record.path != null">
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.redirect != null">
        redirect = #{record.redirect,jdbcType=VARCHAR},
      </if>
      <if test="record.iFrame != null">
        i_frame = #{record.iFrame,jdbcType=BIT},
      </if>
      <if test="record.cache != null">
        cache = #{record.cache,jdbcType=BIT},
      </if>
      <if test="record.hidden != null">
        hidden = #{record.hidden,jdbcType=BIT},
      </if>
      <if test="record.permission != null">
        permission = #{record.permission,jdbcType=VARCHAR},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedTime != null">
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_menu
    set menu_id = #{record.menuId,jdbcType=BIGINT},
      pid = #{record.pid,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      component = #{record.component,jdbcType=VARCHAR},
      menu_sort = #{record.menuSort,jdbcType=INTEGER},
      icon = #{record.icon,jdbcType=VARCHAR},
      path = #{record.path,jdbcType=VARCHAR},
      redirect = #{record.redirect,jdbcType=VARCHAR},
      i_frame = #{record.iFrame,jdbcType=BIT},
      cache = #{record.cache,jdbcType=BIT},
      hidden = #{record.hidden,jdbcType=BIT},
      permission = #{record.permission,jdbcType=VARCHAR},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.phoenixhell.authbackend.entity.MenuEntity">
    update sys_menu
    <set>
      <if test="pid != null">
        pid = #{pid,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="component != null">
        component = #{component,jdbcType=VARCHAR},
      </if>
      <if test="menuSort != null">
        menu_sort = #{menuSort,jdbcType=INTEGER},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="redirect != null">
        redirect = #{redirect,jdbcType=VARCHAR},
      </if>
      <if test="iFrame != null">
        i_frame = #{iFrame,jdbcType=BIT},
      </if>
      <if test="cache != null">
        cache = #{cache,jdbcType=BIT},
      </if>
      <if test="hidden != null">
        hidden = #{hidden,jdbcType=BIT},
      </if>
      <if test="permission != null">
        permission = #{permission,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where menu_id = #{menuId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.phoenixhell.authbackend.entity.MenuEntity">
    update sys_menu
    set pid = #{pid,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      component = #{component,jdbcType=VARCHAR},
      menu_sort = #{menuSort,jdbcType=INTEGER},
      icon = #{icon,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      redirect = #{redirect,jdbcType=VARCHAR},
      i_frame = #{iFrame,jdbcType=BIT},
      cache = #{cache,jdbcType=BIT},
      hidden = #{hidden,jdbcType=BIT},
      permission = #{permission,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=VARCHAR},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where menu_id = #{menuId,jdbcType=BIGINT}
  </update>
</mapper>